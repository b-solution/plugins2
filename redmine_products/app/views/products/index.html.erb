<div class="contextual">
  <% if !@query.new_record? && @query.editable_by?(User.current) %>
  <%= link_to l(:button_contacts_edit_query), edit_crm_query_path(@query, :object_type => "product"), :class => 'icon icon-edit' %>
  <%= link_to l(:button_contacts_delete_query), crm_query_path(@query, :object_type => "product"), :confirm => l(:text_are_you_sure), :method => :delete, :class => 'icon icon-del' %>
  <% end %>
  <%= link_to l(:label_products_new), {:controller => 'products', :action => 'new', :project_id => @project}, :class => 'icon icon-add' if User.current.allowed_to?(:add_products, @project) %>
  <%= link_to_if_authorized l(:label_crm_import), {:controller => 'product_imports', :action => 'new', :project_id => @project}, :class => 'icon icon-import', :id => 'import_from_csv' %>
</div>

<% html_title(@query.new_record? ? l(:label_product_plural) : @query.name) %>

<%= form_tag({ :controller => 'products', :action => 'index', :project_id => @project }, :method => :get, :id => 'query_form') do %>

    <script type="text/javascript">
       jQuery(function($) {
          // when the #search field changes
          $("#search").observe_field(2, function() {
            var form = $("#query_form"); // grab the form wrapping the search bar.
            var url = form.attr("action");
            var formData = form.serialize();
            $.get(url, formData, function(data) { // perform an AJAX get, the trailing function is what happens on successful get.
                $("#contact_list").html(data); // replace the "results" div with the result of action taken
            });
          });
        });
    </script>

    <h2 class="contacts_header">
        <span id='scope_header' class="scope_title">
        <%= @query.new_record? ? l(:label_product_plural) : h(@query.name)  %>
        </span>

        <span class="live_search">
            <%= text_field_tag(:search, params[:search], :autocomplete => "off", :class => "live_search_field", :placeholder => l(:label_crm_contact_search) ) %>

        </span>

    </h2>
<%= hidden_field_tag 'set_filter', '1' %>
<%= hidden_field_tag 'object_type', 'product' %>
<div id="query_form_content" class="hide-when-print">
  <fieldset id="filters" class="collapsible <%= @query.new_record? ? "" : "collapsed" %>">
    <legend onclick="toggleFieldset(this);"><%= l(:label_filter_plural) %></legend>
    <div style="<%= @query.new_record? ? "" : "display: none;" %>">
      <%= render :partial => 'queries/filters', :locals => {:query => @query} %>
    </div>
  </fieldset>
  <fieldset class="collapsible collapsed">
    <legend onclick="toggleFieldset(this);"><%= l(:label_options) %></legend>
    <div style="display: none;">
      <table>
        <tr style="<%= 'display: none;' if products_list_style != 'list' %>">
          <td><%= l(:field_column_names) %></td>
          <td><%= render_query_columns_selection(@query) %></td>
        </tr>
        <tr>
        <% if products_list_style != 'list_board' %>
            <td><label for='group_by'><%= l(:field_group_by) %></label></td>
            <td><%= select_tag('group_by',
                               options_for_select(
                                 [[]] + @query.groupable_columns.collect {|c| [c.caption, c.name.to_s]},
                                 @query.group_by)
                       ) %></td>
        <% end %>
        <% if products_list_style == 'list_excerpt' %>
            <td><label for='sort'><%= l(:label_sort) %></label></td>
            <td><%= select_tag('sort',
                               options_for_select(
                                 [[]] +
                                 [[l(:label_products_code), "code:desc"],
                                  [l(:label_products_name), "name:desc"],
                                  [l(:field_created_on), "created_on:desc"],
                                  [l(:field_updated_on), "updated_on:desc"]],
                                 params[:sort])
                       ) %></td>
        <% end %>

        </tr>
        <%= call_hook(:view_products_index_query_options, :products => @products, :query => @query) %>
        <tr>
          <td><label for='products_list_style'><%= l(:label_crm_list_partial_style) %></label></td>
          <td><%= select_tag('products_list_style', options_for_select(product_list_styles_for_select, products_list_style)) %></td>
        </tr>
      </table>
    </div>
  </fieldset>
</div>

<p class="buttons hide-when-print">
  <%= link_to_function l(:button_apply), 'submit_query_form("query_form")', :class => 'icon icon-checked' %>
  <%= link_to l(:button_clear), { :set_filter => 1, :project_id => @project }, :class => 'icon icon-reload'  %>
  <% if @query.new_record? && User.current.allowed_to?(:save_contacts_queries, @project, :global => true) %>
      <%= link_to_function l(:button_save),
                           "$('#query_form').attr('action', '#{ @project ? new_project_crm_query_path(@project) : new_crm_query_path }'); submit_query_form('query_form')",
                           :class => 'icon icon-save' %>

  <% end %>
</p>
<% end %>

<%= error_messages_for 'query' %>
<% if @query.valid? %>
  <div id="contact_list" class="product_list">
  <% if @products.empty? %>
    <p class="nodata"><%= l(:label_no_data) %></p>
  <% else %>
    <%= render :partial => products_list_style %>
    <p class="pagination"><%= pagination_links_full @products_pages, @products_count %></p>
  <% end %>
  </div>
  <% other_formats_links do |f| %>
      <%= f.link_to 'CSV', :url => params %>
  <% end  %>
<% end %>

<%= context_menu url_for( {:controller => "products", :action => "context_menu"} )%>

<% content_for :sidebar do %>
    <div class="tags">
      <h3><%= l(:label_crm_tags_plural) %></h3>
      <%= Product.available_tags(:at_least => 1).map{|tag| product_tag_link(tag.name, :count => tag.count)}.join(' ').html_safe %>
    </div>
    <%= render_sidebar_crm_queries('product') %>
    <%= render :partial => "recent_products" %>
<% end %>

<%= context_menu url_for( {:controller => "products", :action => "context_menu"} )%>

<% content_for :header_tags do %>
  <%= javascript_include_tag :contacts, :plugin => 'redmine_contacts'  %>
  <%= stylesheet_link_tag :products, :plugin => 'redmine_products' %>
  <meta name = "format-detection" content = "telephone=no">
<% end %>

